Q1) Explain Type casting and its types with examples?
 
Ans:- The process of converting data form type to another data type is called as "Type
      casting".
	
	There are two types of primitive data type castings.
      1. Implicit Type casting
      2. Explicit Type casting

    1. Implicit Type casting:
      The process of converting data from lower data type to higher data type is called as
      Implicit Type Casting.
      
	Example:-   byte b=10;
			int i=b;
			System.out.println(b+" "+i);

		
		Note:-Type Checking is the responsibility of the computer and Type Casting is the 
			responsibility of JVM.
		---------------------------------------------------------------------------------
			int i=10;
			byte b=i;
			System.out.println(i+" "+b);
			
			Status: Compilation Error, Possible loss of precison.
			
			-----------------------------------------------------
				
			byte b=65;
			char c=b;
			System.out.println(b+" "+c);

			Status: Compilation Error
		--------------------------------------------------------------
			
			char c='A';
			int i=c;
			System.out.println(c+" "+i);
			
			Status: No Compilation Error
			Output: A 65

			Reason: char internal data representation is compatible with int.
		--------------------------------------------------------------------------	
			byte b1=60;
			byte b2=70;
			byte b=b1+b2;
			System.out.println(b);
			
			Status: Compilation Error, Possible loss of precision.
		----------------------------------------------------------------------------
			Reason: If we perform any arithmetic operation on primitive data types 
			variables then the result data type will be according to the following formula:
		
			max(int , type1, type2, type3...)
			according to the above formula the result data types of the above expression
			will be "int"
			
			max(int,byte,byte)---->int
	
	2. Explicit Type Casting:
     	   
		The process of converting data form higher data type to lower data type is called 
		Explicit Type Casting.
		
		To perform explicit type casting we have to use the following pattern.
  
		P a= (Q)b;
		(Q)-> Cast operator
          
		Where P and Q are two primitive data types, where Q must be either same as P or 
		lower than P.

		Example:
				int i=10;
				byte b= (byte) i;
				System.out.println(i+" "+b);
				-----------------------------
				
				byte b1=30;
				byte b2=30;
				byte b= (byte)(b1+b2);
				System.out.println(b);
			----------------------------------------
				int i=30;
				byte b=(byte)i;
				System.out.println(b);
				//-128, -127, -126 ,-125,-----0,1,2------,127
				//130=127+3
				Status: No Compilation Error
				Output: -126
		--------------------------------------------------------------------------
              Note:- In java any decimal point number will be by default treated as double;
			Example:
			 
			   float f=10.55;
                     Status: Compilation Error, Possible loss of precision.
			   In order to downcast this double value to the float, we can use either 
 
			   float f=(float)10.55;
			   or 
                     float f=10.55f;



